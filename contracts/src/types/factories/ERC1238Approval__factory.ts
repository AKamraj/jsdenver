/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC1238Approval,
  ERC1238ApprovalInterface,
} from "../ERC1238Approval";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040805160c0810182526015608082019081527f45524331323338204d696e7420417070726f76616c000000000000000000000060a083015281528151808301835260018152603160f81b602082810191825280840183905246848601819052306060860181905285518051908401209451909320955194956100e0957f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f95949193019485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b60408051601f1981840301815291905280516020909101206000555060548061010a6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80633644e51514602d575b600080fd5b603560005481565b60405190815260200160405180910390f3fea164736f6c6343000809000a";

type ERC1238ApprovalConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1238ApprovalConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1238Approval__factory extends ContractFactory {
  constructor(...args: ERC1238ApprovalConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC1238Approval> {
    return super.deploy(overrides || {}) as Promise<ERC1238Approval>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC1238Approval {
    return super.attach(address) as ERC1238Approval;
  }
  connect(signer: Signer): ERC1238Approval__factory {
    return super.connect(signer) as ERC1238Approval__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1238ApprovalInterface {
    return new utils.Interface(_abi) as ERC1238ApprovalInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1238Approval {
    return new Contract(address, _abi, signerOrProvider) as ERC1238Approval;
  }
}
