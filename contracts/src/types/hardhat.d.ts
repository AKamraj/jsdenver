/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "ERC1238",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1238__factory>;
    getContractFactory(
      name: "ERC1238Approval",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1238Approval__factory>;
    getContractFactory(
      name: "ERC1238Collection",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1238Collection__factory>;
    getContractFactory(
      name: "ERC1238Expirable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1238Expirable__factory>;
    getContractFactory(
      name: "ERC1238URIStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1238URIStorage__factory>;
    getContractFactory(
      name: "IERC1238Collection",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1238Collection__factory>;
    getContractFactory(
      name: "IERC1238Expirable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1238Expirable__factory>;
    getContractFactory(
      name: "IERC1238URIStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1238URIStorage__factory>;
    getContractFactory(
      name: "IERC1238",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1238__factory>;
    getContractFactory(
      name: "IERC1238Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1238Receiver__factory>;
    getContractFactory(
      name: "JoyKarma",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.JoyKarma__factory>;
    getContractFactory(
      name: "ERC1238CollectionMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1238CollectionMock__factory>;
    getContractFactory(
      name: "ERC1238Mock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1238Mock__factory>;
    getContractFactory(
      name: "ERC1238ReceiverMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1238ReceiverMock__factory>;
    getContractFactory(
      name: "ERC1238URIStorageMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1238URIStorageMock__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;

    getContractAt(
      name: "ERC1238",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1238>;
    getContractAt(
      name: "ERC1238Approval",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1238Approval>;
    getContractAt(
      name: "ERC1238Collection",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1238Collection>;
    getContractAt(
      name: "ERC1238Expirable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1238Expirable>;
    getContractAt(
      name: "ERC1238URIStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1238URIStorage>;
    getContractAt(
      name: "IERC1238Collection",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1238Collection>;
    getContractAt(
      name: "IERC1238Expirable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1238Expirable>;
    getContractAt(
      name: "IERC1238URIStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1238URIStorage>;
    getContractAt(
      name: "IERC1238",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1238>;
    getContractAt(
      name: "IERC1238Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1238Receiver>;
    getContractAt(
      name: "JoyKarma",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.JoyKarma>;
    getContractAt(
      name: "ERC1238CollectionMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1238CollectionMock>;
    getContractAt(
      name: "ERC1238Mock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1238Mock>;
    getContractAt(
      name: "ERC1238ReceiverMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1238ReceiverMock>;
    getContractAt(
      name: "ERC1238URIStorageMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1238URIStorageMock>;
    getContractAt(
      name: "ERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
